{"version":3,"sources":["src/app/employees/employees-edit/employees-edit.component.html","src/app/employees/employees-list/employees-list.component.html","src/app/employees/employees.component.html","src/app/employees/employees-edit/employees-edit.component.css","src/app/employees/employees-edit/employees-edit.component.ts","src/app/employees/employees-list/employees-list.component.css","src/app/employees/employees-list/employees-list.component.ts","src/app/employees/employees-routing.module.ts","src/app/employees/employees.component.css","src/app/employees/employees.component.ts","src/app/employees/employees.module.ts","src/app/employees/employees.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<p>Add/Edit employee</p>\\r\\n\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n  <form *ngIf=\\\"formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n    <div class=\\\"example-container\\\">\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Name\\\" formControlName=\\\"name\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('name').touched && formGroup.get('name').errors && formGroup.get('name').errors.required\\\">\\r\\n          Name required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Position\\\" formControlName=\\\"position\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('position').touched && formGroup.get('position').errors && formGroup.get('position').errors.required\\\">\\r\\n          Position required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"example-button-row\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\" [routerLink]='routerLink'>Cancel</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","export default \"<h1>Employees</h1>\\r\\n\\r\\n<p>Many employees in the list</p>\\r\\n\\r\\n<div class=\\\"example-button-row\\\">\\r\\n  <button mat-raised-button [routerLink]='[\\\"../edit\\\"]' color=\\\"primary\\\">Add</button>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<mat-form-field>\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"position\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Position </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    Action Column\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:10%\\\"> Action </th>\\r\\n      <td mat-cell *matCellDef=\\\"let employee\\\">\\r\\n        <button mat-icon-button matTooltip=\\\"Edit\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" [routerLink]=\\\"['../edit', employee.id]\\\">edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button mat-icon-button matTooltip=\\\"Delete\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon \\\" (click)=\\\"deleteEmployee(employee)\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n  <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!employees\\\"></mat-progress-bar>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<router-outlet></router-outlet>\\r\\n\"","export default \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  padding: 5px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  body {\\r\\n  background-image: none;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1wbG95ZWVzL2VtcGxveWVlcy1lZGl0L2VtcGxveWVlcy1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0VBRUU7SUFDRSxXQUFXO0VBQ2I7O0VBR0Y7RUFDRSxzQkFBc0I7QUFDeEIiLCJmaWxlIjoic3JjL2FwcC9lbXBsb3llZXMvZW1wbG95ZWVzLWVkaXQvZW1wbG95ZWVzLWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBhZGRpbmc6IDVweDtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG4gIC5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuXHJcbmJvZHkge1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { EmployeesService } from '../employees.service';\r\nimport { Employee } from '../employees.models';\r\n\r\n@Component({\r\n  selector: 'app-employees-edit',\r\n  templateUrl: './employees-edit.component.html',\r\n  styleUrls: ['./employees-edit.component.css']\r\n})\r\nexport class EmployeesEditComponent implements OnInit {\r\n  private routerLink: string = '../list';\r\n\r\n  private employeeID: number;\r\n\r\n  private isEdit: boolean = false;\r\n\r\n  public formGroup: FormGroup;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private employeesService: EmployeesService,\r\n    private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.employeeID = parseInt(this.route.snapshot.params['id']);\r\n\r\n    if (this.employeeID) {\r\n      this.routerLink = '../../list';\r\n\r\n      this.employeesService.getEmployee(this.employeeID).subscribe(res => {\r\n        this.initForm(res);\r\n        this.isEdit = true;\r\n      });\r\n    }\r\n    else {\r\n      this.initForm(<Employee>{});\r\n    }\r\n  }\r\n\r\n  save() {\r\n    Object.keys(this.formGroup.controls).forEach(control => {\r\n      this.formGroup.get(control).markAsTouched();\r\n    });\r\n\r\n    if (this.formGroup.valid) {\r\n      let employee = this.formGroup.value as Employee;\r\n      employee.name = employee.name;\r\n\r\n      if (this.isEdit) {\r\n        employee.id = this.employeeID;\r\n\r\n        this.employeesService.modifyEmployee(employee).subscribe(res => {\r\n          this.router.navigate(['/employees']);\r\n        });\r\n      } else {\r\n\r\n        this.employeesService.saveEmployee(employee).subscribe(res => {\r\n          this.router.navigate(['/employees']);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  initForm(employee: Employee) {\r\n    this.formGroup = this.formBuilder.group({\r\n      name: [employee.name, Validators.required],\r\n      position: [employee.position, Validators.required]\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1wbG95ZWVzL2VtcGxveWVlcy1saXN0L2VtcGxveWVlcy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvZW1wbG95ZWVzL2VtcGxveWVlcy1saXN0L2VtcGxveWVlcy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Employee } from '../employees.models';\r\nimport { EmployeesService } from '../employees.service';\r\nimport { MatTableDataSource, MatPaginator } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-employees-list',\r\n  templateUrl: './employees-list.component.html',\r\n  styleUrls: ['./employees-list.component.css']\r\n})\r\nexport class EmployeesListComponent implements OnInit {\r\n\r\n  public displayedColumns: string[] = ['name', 'position', 'action'];\r\n  public employees: Employee[];\r\n\r\n  public dataSource;\r\n  public isloading = false;\r\n\r\n  constructor(private employeesService: EmployeesService) { }\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  ngOnInit() {\r\n    this.loadEmployees();\r\n\r\n  }\r\n\r\n  async loadEmployees() {\r\n    try {\r\n      this.employeesService.listEmployees().subscribe(res => {\r\n        this.employees = res;\r\n        this.dataSource = new MatTableDataSource(this.employees);\r\n        this.isloading = true;\r\n        this.dataSource.paginator = this.paginator;\r\n      });\r\n    } catch (err) {\r\n      console.error(`this is not good: ${err.Message}`);\r\n      this.isloading = false;\r\n    }\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n\r\n  deleteEmployee(employee: Employee) {\r\n    this.employeesService.deleteEmployee(employee.id).subscribe(x => {\r\n      this.loadEmployees();\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EmployeesComponent } from './employees.component';\r\nimport { EmployeesListComponent } from './employees-list/employees-list.component';\r\nimport { EmployeesEditComponent } from './employees-edit/employees-edit.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: EmployeesComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n      { path: 'list', component: EmployeesListComponent },\r\n      { path: 'edit/:id', component: EmployeesEditComponent },\r\n      { path: 'edit', component: EmployeesEditComponent },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class EmployeesRoutingModule {\r\n  static routedComponents = [EmployeesComponent, EmployeesListComponent, EmployeesEditComponent];\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy9lbXBsb3llZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-employees',\r\n  templateUrl: './employees.component.html',\r\n  styleUrls: ['./employees.component.css']\r\n})\r\nexport class EmployeesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CoreModule } from '../core/core.module';\r\nimport { AngularMaterialModule } from '../shared/angular-material.module';\r\n\r\nimport { EmployeesRoutingModule } from './employees-routing.module';\r\n\r\nimport { EmployeesService } from './employees.service';\r\n\r\n@NgModule({\r\n  declarations: [EmployeesRoutingModule.routedComponents],\r\n  imports: [\r\n    CommonModule,\r\n    EmployeesRoutingModule,\r\n    AngularMaterialModule,\r\n    CoreModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [EmployeesService],\r\n})\r\nexport class EmployeesModule { }\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { ApplicationService } from \"../core/services/application.service\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Employee } from \"./employees.models\";\r\n\r\n@Injectable()\r\nexport class EmployeesService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private applicationService: ApplicationService) { }\r\n\r\n  getEmployee(id: number) {\r\n    return this.http.get<Employee>(`${this.applicationService.baseUrl}api/Employees/${id}`);\r\n  }\r\n\r\n  listEmployees() {\r\n    return this.http.get<Employee[]>(`${this.applicationService.baseUrl}api/Employees`);\r\n  }\r\n\r\n  saveEmployee(employee: Employee) {\r\n    return this.http.post(`${this.applicationService.baseUrl}api/Employees`, employee);\r\n  }\r\n\r\n  modifyEmployee(employee: Employee) {\r\n    return this.http.put(`${this.applicationService.baseUrl}api/Employees/${employee.id}`, employee);\r\n  }\r\n\r\n  deleteEmployee(id: number) {\r\n    return this.http.delete<any>(`${this.applicationService.baseUrl}api/Employees/${id}`);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"employees-employees-module-es5.js"}