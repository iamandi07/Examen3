{"version":3,"sources":["./src/app/persons/persons-edit/persons-edit.component.html","./src/app/persons/persons-list/persons-list.component.html","./src/app/persons/persons.component.html","./src/app/persons/persons-edit/persons-edit.component.css","./src/app/persons/persons-edit/persons-edit.component.ts","./src/app/persons/persons-list/persons-list.component.css","./src/app/persons/persons-list/persons-list.component.ts","./src/app/persons/persons-routing.module.ts","./src/app/persons/persons.component.css","./src/app/persons/persons.component.ts","./src/app/persons/persons.module.ts","./src/app/persons/persons.service.ts"],"names":[],"mappings":"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","file":"persons-persons-module-es2015.js","sourcesContent":["export default \"<p>Add/Edit person</p>\\r\\n\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n  <form *ngIf=\\\"formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n    <div class=\\\"example-container\\\">\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Name\\\" formControlName=\\\"name\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('name').touched && formGroup.get('name').errors && formGroup.get('name').errors.required\\\">\\r\\n          Name required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Surname\\\" formControlName=\\\"surname\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('surname').touched && formGroup.get('surname').errors && formGroup.get('surname').errors.required\\\">\\r\\n          Surname required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"PhoneNumber\\\" formControlName=\\\"phoneNumber\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('phoneNumber').touched && formGroup.get('phoneNumber').errors && formGroup.get('phoneNumber').errors.required\\\">\\r\\n          PhoneNumber required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('email').touched && formGroup.get('email').errors && formGroup.get('email').errors.required\\\">\\r\\n          Email required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"example-button-row\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\" [routerLink]='routerLink'>Cancel</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","export default \"<h1>Persons</h1>\\r\\n\\r\\n<p>Many persons in the list</p>\\r\\n\\r\\n<div class=\\\"example-button-row\\\">\\r\\n  <button mat-raised-button [routerLink]='[\\\"../edit\\\"]' color=\\\"primary\\\">Add</button>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<mat-form-field>\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"surname\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Surname </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.surname}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"phoneNumber\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> PhoneNumber </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.phoneNumber}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Email </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Action </th>\\r\\n      <td mat-cell *matCellDef=\\\"let person\\\">\\r\\n        <button mat-icon-button matTooltip=\\\"Edit\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" [routerLink]=\\\"['../edit', person.id]\\\">edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button mat-icon-button matTooltip=\\\"Delete\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon \\\" (click)=\\\"deletePerson(person)\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n  <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!persons\\\"></mat-progress-bar>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<router-outlet></router-outlet>\\r\\n\"","export default \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  padding: 5px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  body {\\r\\n  background-image: none;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGVyc29ucy9wZXJzb25zLWVkaXQvcGVyc29ucy1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0VBRUU7SUFDRSxXQUFXO0VBQ2I7O0VBRUY7RUFDRSxzQkFBc0I7QUFDeEIiLCJmaWxlIjoic3JjL2FwcC9wZXJzb25zL3BlcnNvbnMtZWRpdC9wZXJzb25zLWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBhZGRpbmc6IDVweDtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG4gIC5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuYm9keSB7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PersonsService } from '../persons.service';\r\nimport { Person } from '../persons.models';\r\n\r\n@Component({\r\n  selector: 'app-persons-edit',\r\n  templateUrl: './persons-edit.component.html',\r\n  styleUrls: ['./persons-edit.component.css']\r\n})\r\nexport class PersonsEditComponent implements OnInit {\r\n\r\n  private routerLink: string = '../list';\r\n\r\n  private personId: number;\r\n\r\n  private isEdit: boolean = false;\r\n\r\n  public formGroup: FormGroup;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private personsService: PersonsService,\r\n    private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.personId = parseInt(this.route.snapshot.params['id']);\r\n\r\n    if (this.personId) {\r\n      this.routerLink = '../../list';\r\n\r\n      this.personsService.getPerson(this.personId).subscribe(res => {\r\n        this.initForm(res);\r\n        this.isEdit = true;\r\n      });\r\n    }\r\n    else {\r\n      this.initForm(<Person>{});\r\n    }\r\n  }\r\n\r\n  save() {\r\n    Object.keys(this.formGroup.controls).forEach(control => {\r\n      this.formGroup.get(control).markAsTouched();\r\n    });\r\n\r\n    if (this.formGroup.valid) {\r\n      let person = this.formGroup.value as Person;\r\n      person.name = person.name;\r\n      person.surname = person.surname;\r\n      person.phoneNumber = person.phoneNumber;\r\n      person.email = person.email;\r\n\r\n      if (this.isEdit) {\r\n        person.id = this.personId;\r\n\r\n        this.personsService.modifyPerson(person).subscribe(res => {\r\n          this.router.navigate(['/persons']);\r\n        });\r\n      } else {\r\n\r\n        this.personsService.savePerson(person).subscribe(res => {\r\n          this.router.navigate(['/persons']);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  initForm(person: Person) {\r\n    this.formGroup = this.formBuilder.group({\r\n      name: [person.name, Validators.required],\r\n      surname: [person.surname, Validators.required],\r\n      phoneNumber: [person.phoneNumber, Validators.required],\r\n      email: [person.email, Validators.required]\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGVyc29ucy9wZXJzb25zLWxpc3QvcGVyc29ucy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvcGVyc29ucy9wZXJzb25zLWxpc3QvcGVyc29ucy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Person } from '../persons.models';\r\nimport { PersonsService } from '../persons.service';\r\nimport { MatTableDataSource, MatPaginator } from '@angular/material';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-persons-list',\r\n  templateUrl: './persons-list.component.html',\r\n  styleUrls: ['./persons-list.component.css']\r\n})\r\nexport class PersonsListComponent implements OnInit {\r\n\r\n  public displayedColumns: string[] = ['name', 'surname', 'phoneNumber', 'email', 'action'];\r\n  public persons: Person[];\r\n\r\n  public dataSource;\r\n  public isloading = false;\r\n\r\n  constructor(private personsService: PersonsService) { }\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  ngOnInit() {\r\n    this.loadPersons();\r\n  }\r\n\r\n  async loadPersons() {\r\n    try {\r\n      this.personsService.listPersons().subscribe(res => {\r\n        this.persons = res;\r\n        this.dataSource = new MatTableDataSource(this.persons);\r\n        this.isloading = true;\r\n        this.dataSource.paginator = this.paginator;\r\n      });\r\n    } catch (err) {\r\n      console.error(`this is not good: ${err.Message}`);\r\n      this.isloading = false;\r\n    }\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n\r\n  deletePerson(person: Person) {\r\n    this.personsService.deletePerson(person.id).subscribe(x => {\r\n      this.loadPersons();\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PersonsComponent } from './persons.component';\r\nimport { PersonsListComponent } from './persons-list/persons-list.component';\r\nimport { PersonsEditComponent } from './persons-edit/persons-edit.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: PersonsComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n      { path: 'list', component: PersonsListComponent },\r\n      { path: 'edit/:id', component: PersonsEditComponent },\r\n      { path: 'edit', component: PersonsEditComponent },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class PersonsRoutingModule {\r\n  static routedComponents = [PersonsComponent, PersonsListComponent, PersonsEditComponent];\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbnMvcGVyc29ucy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-persons',\r\n  templateUrl: './persons.component.html',\r\n  styleUrls: ['./persons.component.css']\r\n})\r\nexport class PersonsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CoreModule } from '../core/core.module';\r\nimport { AngularMaterialModule } from '../shared/angular-material.module';\r\n\r\nimport { PersonsRoutingModule } from './persons-routing.module';\r\nimport { PersonsService } from './persons.service';\r\n\r\n@NgModule({\r\n  declarations: [PersonsRoutingModule.routedComponents],\r\n  imports: [\r\n    CommonModule,\r\n    PersonsRoutingModule,\r\n    AngularMaterialModule,\r\n    CoreModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [PersonsService],\r\n})\r\nexport class PersonsModule { }\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { ApplicationService } from \"../core/services/application.service\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Person } from \"./persons.models\";\r\n\r\n@Injectable()\r\nexport class PersonsService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private applicationService: ApplicationService) { }\r\n\r\n  getPerson(id: number) {\r\n    return this.http.get<Person>(`${this.applicationService.baseUrl}api/People/${id}`);\r\n  }\r\n\r\n  listPersons() {\r\n    return this.http.get<Person[]>(`${this.applicationService.baseUrl}api/People`);\r\n  }\r\n\r\n  savePerson(person: Person) {\r\n    return this.http.post(`${this.applicationService.baseUrl}api/People`, person);\r\n  }\r\n\r\n  modifyPerson(person: Person) {\r\n    return this.http.put(`${this.applicationService.baseUrl}api/People/${person.id}`, person);\r\n  }\r\n\r\n  deletePerson(id: number) {\r\n    return this.http.delete<any>(`${this.applicationService.baseUrl}api/People/${id}`);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}