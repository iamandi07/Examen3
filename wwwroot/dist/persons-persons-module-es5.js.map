{"version":3,"sources":["src/app/persons/persons-edit/persons-edit.component.html","src/app/persons/persons-list/persons-list.component.html","src/app/persons/persons.component.html","src/app/persons/persons-edit/persons-edit.component.css","src/app/persons/persons-edit/persons-edit.component.ts","src/app/persons/persons-list/persons-list.component.css","src/app/persons/persons-list/persons-list.component.ts","src/app/persons/persons-routing.module.ts","src/app/persons/persons.component.css","src/app/persons/persons.component.ts","src/app/persons/persons.module.ts","src/app/persons/persons.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<p>Add/Edit person</p>\\r\\n\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n  <form *ngIf=\\\"formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n    <div class=\\\"example-container\\\">\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Name\\\" formControlName=\\\"name\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('name').touched && formGroup.get('name').errors && formGroup.get('name').errors.required\\\">\\r\\n          Name required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Surname\\\" formControlName=\\\"surname\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('surname').touched && formGroup.get('surname').errors && formGroup.get('surname').errors.required\\\">\\r\\n          Surname required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"PhoneNumber\\\" formControlName=\\\"phoneNumber\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('phoneNumber').touched && formGroup.get('phoneNumber').errors && formGroup.get('phoneNumber').errors.required\\\">\\r\\n          PhoneNumber required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('email').touched && formGroup.get('email').errors && formGroup.get('email').errors.required\\\">\\r\\n          Email required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"example-button-row\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\" [routerLink]='routerLink'>Cancel</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","export default \"<h1>Persons</h1>\\r\\n\\r\\n<p>Many persons in the list</p>\\r\\n\\r\\n<div class=\\\"example-button-row\\\">\\r\\n  <button mat-raised-button [routerLink]='[\\\"../edit\\\"]' color=\\\"primary\\\">Add</button>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<mat-form-field>\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"surname\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Surname </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.surname}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"phoneNumber\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> PhoneNumber </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.phoneNumber}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Email </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Action </th>\\r\\n      <td mat-cell *matCellDef=\\\"let person\\\">\\r\\n        <button mat-icon-button matTooltip=\\\"Edit\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" [routerLink]=\\\"['../edit', person.id]\\\">edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button mat-icon-button matTooltip=\\\"Delete\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon \\\" (click)=\\\"deletePerson(person)\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n  <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!persons\\\"></mat-progress-bar>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<router-outlet></router-outlet>\\r\\n\"","export default \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  padding: 5px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  body {\\r\\n  background-image: none;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGVyc29ucy9wZXJzb25zLWVkaXQvcGVyc29ucy1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0VBRUU7SUFDRSxXQUFXO0VBQ2I7O0VBRUY7RUFDRSxzQkFBc0I7QUFDeEIiLCJmaWxlIjoic3JjL2FwcC9wZXJzb25zL3BlcnNvbnMtZWRpdC9wZXJzb25zLWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBhZGRpbmc6IDVweDtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG4gIC5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuYm9keSB7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PersonsService } from '../persons.service';\r\nimport { Person } from '../persons.models';\r\n\r\n@Component({\r\n  selector: 'app-persons-edit',\r\n  templateUrl: './persons-edit.component.html',\r\n  styleUrls: ['./persons-edit.component.css']\r\n})\r\nexport class PersonsEditComponent implements OnInit {\r\n\r\n  private routerLink: string = '../list';\r\n\r\n  private personId: number;\r\n\r\n  private isEdit: boolean = false;\r\n\r\n  public formGroup: FormGroup;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private personsService: PersonsService,\r\n    private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.personId = parseInt(this.route.snapshot.params['id']);\r\n\r\n    if (this.personId) {\r\n      this.routerLink = '../../list';\r\n\r\n      this.personsService.getPerson(this.personId).subscribe(res => {\r\n        this.initForm(res);\r\n        this.isEdit = true;\r\n      });\r\n    }\r\n    else {\r\n      this.initForm(<Person>{});\r\n    }\r\n  }\r\n\r\n  save() {\r\n    Object.keys(this.formGroup.controls).forEach(control => {\r\n      this.formGroup.get(control).markAsTouched();\r\n    });\r\n\r\n    if (this.formGroup.valid) {\r\n      let person = this.formGroup.value as Person;\r\n      person.name = person.name;\r\n      person.surname = person.surname;\r\n      person.phoneNumber = person.phoneNumber;\r\n      person.email = person.email;\r\n\r\n      if (this.isEdit) {\r\n        person.id = this.personId;\r\n\r\n        this.personsService.modifyPerson(person).subscribe(res => {\r\n          this.router.navigate(['/persons']);\r\n        });\r\n      } else {\r\n\r\n        this.personsService.savePerson(person).subscribe(res => {\r\n          this.router.navigate(['/persons']);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  initForm(person: Person) {\r\n    this.formGroup = this.formBuilder.group({\r\n      name: [person.name, Validators.required],\r\n      surname: [person.surname, Validators.required],\r\n      phoneNumber: [person.phoneNumber, Validators.required],\r\n      email: [person.email, Validators.required]\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGVyc29ucy9wZXJzb25zLWxpc3QvcGVyc29ucy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvcGVyc29ucy9wZXJzb25zLWxpc3QvcGVyc29ucy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Person } from '../persons.models';\r\nimport { PersonsService } from '../persons.service';\r\nimport { MatTableDataSource, MatPaginator } from '@angular/material';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-persons-list',\r\n  templateUrl: './persons-list.component.html',\r\n  styleUrls: ['./persons-list.component.css']\r\n})\r\nexport class PersonsListComponent implements OnInit {\r\n\r\n  public displayedColumns: string[] = ['name', 'surname', 'phoneNumber', 'email', 'action'];\r\n  public persons: Person[];\r\n\r\n  public dataSource;\r\n  public isloading = false;\r\n\r\n  constructor(private personsService: PersonsService) { }\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  ngOnInit() {\r\n    this.loadPersons();\r\n  }\r\n\r\n  async loadPersons() {\r\n    try {\r\n      this.personsService.listPersons().subscribe(res => {\r\n        this.persons = res;\r\n        this.dataSource = new MatTableDataSource(this.persons);\r\n        this.isloading = true;\r\n        this.dataSource.paginator = this.paginator;\r\n      });\r\n    } catch (err) {\r\n      console.error(`this is not good: ${err.Message}`);\r\n      this.isloading = false;\r\n    }\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n\r\n  deletePerson(person: Person) {\r\n    this.personsService.deletePerson(person.id).subscribe(x => {\r\n      this.loadPersons();\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PersonsComponent } from './persons.component';\r\nimport { PersonsListComponent } from './persons-list/persons-list.component';\r\nimport { PersonsEditComponent } from './persons-edit/persons-edit.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: PersonsComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n      { path: 'list', component: PersonsListComponent },\r\n      { path: 'edit/:id', component: PersonsEditComponent },\r\n      { path: 'edit', component: PersonsEditComponent },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class PersonsRoutingModule {\r\n  static routedComponents = [PersonsComponent, PersonsListComponent, PersonsEditComponent];\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbnMvcGVyc29ucy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-persons',\r\n  templateUrl: './persons.component.html',\r\n  styleUrls: ['./persons.component.css']\r\n})\r\nexport class PersonsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CoreModule } from '../core/core.module';\r\nimport { AngularMaterialModule } from '../shared/angular-material.module';\r\n\r\nimport { PersonsRoutingModule } from './persons-routing.module';\r\nimport { PersonsService } from './persons.service';\r\n\r\n@NgModule({\r\n  declarations: [PersonsRoutingModule.routedComponents],\r\n  imports: [\r\n    CommonModule,\r\n    PersonsRoutingModule,\r\n    AngularMaterialModule,\r\n    CoreModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [PersonsService],\r\n})\r\nexport class PersonsModule { }\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { ApplicationService } from \"../core/services/application.service\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Person } from \"./persons.models\";\r\n\r\n@Injectable()\r\nexport class PersonsService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private applicationService: ApplicationService) { }\r\n\r\n  getPerson(id: number) {\r\n    return this.http.get<Person>(`${this.applicationService.baseUrl}api/People/${id}`);\r\n  }\r\n\r\n  listPersons() {\r\n    return this.http.get<Person[]>(`${this.applicationService.baseUrl}api/People`);\r\n  }\r\n\r\n  savePerson(person: Person) {\r\n    return this.http.post(`${this.applicationService.baseUrl}api/People`, person);\r\n  }\r\n\r\n  modifyPerson(person: Person) {\r\n    return this.http.put(`${this.applicationService.baseUrl}api/People/${person.id}`, person);\r\n  }\r\n\r\n  deletePerson(id: number) {\r\n    return this.http.delete<any>(`${this.applicationService.baseUrl}api/People/${id}`);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"persons-persons-module-es5.js"}