{"version":3,"sources":["./src/app/calibration/calibrations-edit/calibrations-edit.component.html","./src/app/calibration/calibrations-list/calibrations-list.component.html","./src/app/calibration/calibrations.component.html","./src/app/calibration/calibrations-edit/calibrations-edit.component.css","./src/app/calibration/calibrations-edit/calibrations-edit.component.ts","./src/app/calibration/calibrations-list/calibrations-list.component.css","./src/app/calibration/calibrations-list/calibrations-list.component.ts","./src/app/calibration/calibrations-routing.module.ts","./src/app/calibration/calibrations.component.css","./src/app/calibration/calibrations.component.ts","./src/app/calibration/calibrations.module.ts","./src/app/calibration/calibrations.service.ts"],"names":[],"mappings":"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","file":"calibration-calibrations-module-es2015.js","sourcesContent":["export default \"<p>Add/Edit equipment</p>\\r\\n\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n  <form *ngIf=\\\"formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n    <div class=\\\"example-container\\\">\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"EquipmentId\\\" formControlName=\\\"equipmentId\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('equipmentId').touched && formGroup.get('equipmentId').errors && formGroup.get('equipmentId').errors.required\\\">\\r\\n          EquipmenrId required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"PersonId\\\" formControlName=\\\"personId\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('personId').touched && formGroup.get('personId').errors && formGroup.get('personId').errors.required\\\">\\r\\n          PersonId required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"example-button-row\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\" [routerLink]='routerLink'>Cancel</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","export default \"<h1>Calibrations</h1>\\r\\n\\r\\n<p>Many calibrations in the list</p>\\r\\n\\r\\n<div class=\\\"example-button-row\\\">\\r\\n  <button mat-raised-button [routerLink]='[\\\"../edit\\\"]' color=\\\"primary\\\">Add</button>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<mat-form-field>\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"equipmentId\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> EquipmentId </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.equipmentId}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"personId\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> PersonId </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.personId}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Action </th>\\r\\n      <td mat-cell *matCellDef=\\\"let calibration\\\">\\r\\n        <button mat-icon-button matTooltip=\\\"Edit\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" [routerLink]=\\\"['../edit', calibration.id]\\\">edit</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button matTooltip=\\\"Delete\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon \\\" (click)=\\\"deleteCalibration(calibration)\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n  <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!calibrations\\\"></mat-progress-bar>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<router-outlet></router-outlet>\\r\\n\"","export default \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  padding: 5px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  body {\\r\\n  background-image: none;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FsaWJyYXRpb24vY2FsaWJyYXRpb25zLWVkaXQvY2FsaWJyYXRpb25zLWVkaXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjs7RUFFRTtJQUNFLFdBQVc7RUFDYjs7RUFFRjtFQUNFLHNCQUFzQjtBQUN4QiIsImZpbGUiOiJzcmMvYXBwL2NhbGlicmF0aW9uL2NhbGlicmF0aW9ucy1lZGl0L2NhbGlicmF0aW9ucy1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBwYWRkaW5nOiA1cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuICAuZXhhbXBsZS1jb250YWluZXIgPiAqIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuXHJcbmJvZHkge1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CalibrationsService } from '../calibrations.service';\r\nimport { Calibration } from '../calibrations.models';\r\n\r\n@Component({\r\n  selector: 'app-calibrations-edit',\r\n  templateUrl: './calibrations-edit.component.html',\r\n  styleUrls: ['./calibrations-edit.component.css']\r\n})\r\nexport class CalibrationsEditComponent implements OnInit {\r\n\r\n  private routerLink: string = '../list';\r\n\r\n  private calibrationId: number;\r\n\r\n  private isEdit: boolean = false;\r\n\r\n  public formGroup: FormGroup;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private calibrationsService: CalibrationsService,\r\n    private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.calibrationId = parseInt(this.route.snapshot.params['id']);\r\n\r\n    if (this.calibrationId) {\r\n      this.routerLink = '../../list';\r\n\r\n      this.calibrationsService.getCalibration(this.calibrationId).subscribe(res => {\r\n        this.initForm(res);\r\n        this.isEdit = true;\r\n      });\r\n    }\r\n    else {\r\n      this.initForm(<Calibration>{});\r\n    }\r\n  }\r\n\r\n  save() {\r\n    Object.keys(this.formGroup.controls).forEach(control => {\r\n      this.formGroup.get(control).markAsTouched();\r\n    });\r\n\r\n    if (this.formGroup.valid) {\r\n      let calibration = this.formGroup.value as Calibration;\r\n      calibration.equipmentId = calibration.equipmentId;\r\n      calibration.personId = calibration.personId;\r\n\r\n      if (this.isEdit) {\r\n        calibration.equipmentId = this.calibrationId\r\n\r\n        this.calibrationsService.modifyCalibration(calibration).subscribe(res => {\r\n          this.router.navigate(['/calibrations']);\r\n        });\r\n      } else {\r\n\r\n        this.calibrationsService.saveCalibrations(calibration).subscribe(res => {\r\n          this.router.navigate(['/calibrations']);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  initForm(calibration: Calibration) {\r\n    this.formGroup = this.formBuilder.group({\r\n      equipmentId: [calibration.equipmentId, Validators.required],\r\n      personId: [calibration.personId, Validators.required]\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FsaWJyYXRpb24vY2FsaWJyYXRpb25zLWxpc3QvY2FsaWJyYXRpb25zLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGVBQWU7RUFDZixXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9jYWxpYnJhdGlvbi9jYWxpYnJhdGlvbnMtbGlzdC9jYWxpYnJhdGlvbnMtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWF0LWZvcm0tZmllbGQge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Calibration } from '../calibrations.models';\r\nimport { CalibrationsService } from '../calibrations.service';\r\nimport { MatTableDataSource, MatPaginator } from '@angular/material';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-calibrations-list',\r\n  templateUrl: './calibrations-list.component.html',\r\n  styleUrls: ['./calibrations-list.component.css']\r\n})\r\nexport class CalibrationsListComponent implements OnInit {\r\n\r\n  public displayedColumns: string[] = ['equipmentId', 'personId', 'action'];\r\n  public calibrations: Calibration[];\r\n\r\n  public dataSource;\r\n  public isloading = false;\r\n\r\n  constructor(private calibrationsService: CalibrationsService) { }\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  ngOnInit() {\r\n    this.loadCalibrations();\r\n  }\r\n\r\n  async loadCalibrations() {\r\n    try {\r\n      this.calibrationsService.listCalibrations().subscribe(res => {\r\n        this.calibrations = res;\r\n        this.dataSource = new MatTableDataSource(this.calibrations);\r\n        this.isloading = true;\r\n        this.dataSource.paginator = this.paginator;\r\n      });\r\n    } catch (err) {\r\n      console.error(`this is not good: ${err.Message}`);\r\n      this.isloading = false;\r\n    }\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  deleteCalibration(calibration: Calibration) {\r\n    this.calibrationsService.deleteCalibration(calibration.equipmentId).subscribe(x => {\r\n      this.loadCalibrations();\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CalibrationsComponent } from './calibrations.component';\r\nimport { CalibrationsListComponent } from './calibrations-list/calibrations-list.component';\r\nimport { CalibrationsEditComponent } from './calibrations-edit/calibrations-edit.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: CalibrationsComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n      { path: 'list', component: CalibrationsListComponent },\r\n      { path: 'edit/:id', component: CalibrationsEditComponent },\r\n      { path: 'edit', component: CalibrationsEditComponent },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class CalibrationsRoutingModule {\r\n  static routedComponents = [CalibrationsComponent, CalibrationsListComponent, CalibrationsEditComponent];\r\n}\r\n","export default \"body {\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FsaWJyYXRpb24vY2FsaWJyYXRpb25zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsImZpbGUiOiJzcmMvYXBwL2NhbGlicmF0aW9uL2NhbGlicmF0aW9ucy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-calibrations',\r\n  templateUrl: './calibrations.component.html',\r\n  styleUrls: ['./calibrations.component.css']\r\n})\r\nexport class CalibrationsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CoreModule } from '../core/core.module';\r\nimport { AngularMaterialModule } from '../shared/angular-material.module';\r\n\r\nimport { CalibrationsRoutingModule } from './calibrations-routing.module';\r\nimport { CalibrationsService } from './calibrations.service';\r\n\r\n@NgModule({\r\n  declarations: [CalibrationsRoutingModule.routedComponents],\r\n  imports: [\r\n    CommonModule,\r\n    CalibrationsRoutingModule,\r\n    AngularMaterialModule,\r\n    CoreModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [CalibrationsService],\r\n})\r\nexport class CalibrationsModule { }\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { ApplicationService } from \"../core/services/application.service\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Calibration } from \"./calibrations.models\";\r\n\r\n@Injectable()\r\nexport class CalibrationsService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private applicationService: ApplicationService) { }\r\n\r\n  getCalibration(id: number) {\r\n    return this.http.get<Calibration>(`${this.applicationService.baseUrl}api/Calibrations/${id}`);\r\n  }\r\n\r\n  listCalibrations() {\r\n    return this.http.get<Calibration[]>(`${this.applicationService.baseUrl}api/Calibrations`);\r\n  }\r\n\r\n  saveCalibrations(calibration: Calibration) {\r\n    return this.http.post(`${this.applicationService.baseUrl}api/Calibrations`, calibration);\r\n  }\r\n\r\n  modifyCalibration(calibration: Calibration) {\r\n    return this.http.put(`${this.applicationService.baseUrl}api/Calibrations/${calibration.equipmentId}`, calibration);\r\n  }\r\n\r\n  deleteCalibration(id: number) {\r\n    return this.http.delete<any>(`${this.applicationService.baseUrl}api/Calibrations/${id}`);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}