{"version":3,"sources":["src/app/app.component.html","src/app/counter/counter.component.html","src/app/fetch-data/fetch-data.component.html","src/app/home/home.component.html","src/app/login/login.component.html","src/app/nav-menu/nav-menu.component.html","src/app/registration/registration.component.html","src/$_lazy_route_resource lazy namespace object","src/app/app.component.ts","src/app/app.module.ts","src/app/core/core.module.ts","src/app/core/guards/authentication.guard.ts","src/app/core/services/application.service.ts","src/app/core/services/http-request-interceptor.ts","src/app/core/services/security.service.ts","src/app/core/services/token.service.ts","src/app/counter/counter.component.ts","src/app/fetch-data/fetch-data.component.ts","src/app/home/home.component.ts","src/app/login/login.component.css","src/app/login/login.component.ts","src/app/nav-menu/nav-menu.component.css","src/app/nav-menu/nav-menu.component.ts","src/app/registration/registration.component.css","src/app/registration/registration.component.ts","src/app/shared/angular-material.module.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<body>\\r\\n  <app-nav-menu></app-nav-menu>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\"","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\"","export default \"<h1 id=\\\"tableLabel\\\">Examen</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!persons\\\"><em>Loading...</em></p>\\r\\n<p *ngIf=\\\"!inspectionPlans\\\"><em>Loading...</em></p>\\r\\n<p *ngIf=\\\"!equipments\\\"><em>Loading...</em></p>\\r\\n<p *ngIf=\\\"!calibrations\\\"><em>Loading...</em></p>\\r\\n\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"persons\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Name</th>\\r\\n      <th>Surname</th>\\r\\n      <th>PhoneNumber</th>\\r\\n      <th>Email</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let person of persons\\\">\\r\\n      <td>{{ person.name }}</td>\\r\\n      <td>{{ person.surname }}</td>\\r\\n      <td>{{ person.phoneNumber }}</td>\\r\\n      <td>{{ person.email }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"inspectionPlans\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Description</th>\\r\\n      <th>Temperature</th>\\r\\n      <th>Humidity</th>\\r\\n      <th>Pressure</th>\\r\\n      <th>Person</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let inspectionPlan of inspectionPlans\\\">\\r\\n      <td>{{ inspectionPlan.description }}</td>\\r\\n      <td>{{ inspectionPlan.temperature }}</td>\\r\\n      <td>{{ inspectionPlan.humidity }}</td>\\r\\n      <td>{{ inspectionPlan.pressure }}</td>\\r\\n      <td>{{ inspectionPlan.person }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"equipments\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Description</th>\\r\\n      <th>EquipementType</th>\\r\\n      <th>Model</th>\\r\\n      <th>SerialNumber</th>\\r\\n      <th>CalibrationDate</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let equipment of equipments\\\">\\r\\n      <td>{{ equipment.description }}</td>\\r\\n      <td>{{ equipment.equipementType }}</td>\\r\\n      <td>{{ equipment.model }}</td>\\r\\n      <td>{{ equipment.serialNumber }}</td>\\r\\n      <td>{{ equipment.calibrationDate }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"calibrations\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Equipment</th>\\r\\n      <th>Person</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let calibration of calibrations\\\">\\r\\n      <td>{{ calibration.equipment }}</td>\\r\\n      <td>{{ calibration.person }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","export default \"<html>\\r\\n<head>\\r\\n<style>\\r\\n\\r\\nhtml, body {\\r\\n    /* The image used */\\r\\n    background-image: url(\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/full page/img(20).jpg\\\");\\r\\n    /* Full height */\\r\\n    height: 100%;\\r\\n    margin: 0;\\r\\n    \\r\\n    /* Center and scale the image nicely */\\r\\n    background-position: center;\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: cover;\\r\\n  }\\r\\np{\\r\\n  text-align : center;\\r\\n  color: deeppink\\r\\n}\\r\\n</style>\\r\\n</head>\\r\\n<body>\\r\\n<h1>Hello, world!</h1>\\r\\n<p class=\\\" py-5 text-center\\\">Welcome to the calibration page :)</p>\\r\\n<p> If you want to access the website, please Register. If it is done, Sign in</p>\\r\\n\\r\\n</body>\\r\\n</html>\\r\\n\"","export default \"<mat-card>\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Log in</mat-card-title>\\r\\n  </mat-card-header>\\r\\n\\r\\n  <form class=\\\"example-form\\\">\\r\\n    <mat-card-content>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"loginModel.email\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"loginModel.password\\\">\\r\\n      </mat-form-field>\\r\\n    </mat-card-content>\\r\\n    <button mat-stroked-button color=\\\"accent\\\" class=\\\"btn-block\\\" (click)=\\\"loginUser()\\\">Log in</button>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Examen</a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div\\r\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n      >\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li class=\\\"nav-item\\\"\\r\\n              [routerLinkActive]=\\\"['link-active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n          </li>\\r\\n          <!--          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n    <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/counter']\\\">Counter</a>\\r\\n  </li> -->\\r\\n\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-data']\\\">Fetch data</a>\\r\\n          </li>\\r\\n\\r\\n          <!-- <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n    <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/my-route']\\\">My route</a>\\r\\n  </li> -->\\r\\n\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/login']\\\">Sign In</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/persons']\\\">Persons</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/inspectionPlans']\\\">InspectionPlans</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/equipments']\\\">Equipments</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/calibrations']\\\">Calibrations</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </nav>\\r\\n  </header>\\r\\n\"","export default \"<mat-card>\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Register</mat-card-title>\\r\\n  </mat-card-header>\\r\\n\\r\\n  <form class=\\\"example-form\\\">\\r\\n\\r\\n    <mat-card-content>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"registerModel.email\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"registerModel.password\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      </mat-card-content>\\r\\n\\r\\n    <button mat-stroked-button color=\\\"accent\\\" class=\\\"btn-block\\\" (click)=\\\"registerUser()\\\">Register</button>\\r\\n\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","var map = {\n\t\"./calibration/calibrations.module\": [\n\t\t\"./src/app/calibration/calibrations.module.ts\",\n\t\t\"calibration-calibrations-module\"\n\t],\n\t\"./equipments/equipments.module\": [\n\t\t\"./src/app/equipments/equipments.module.ts\",\n\t\t\"equipments-equipments-module\"\n\t],\n\t\"./inspectionPlans/inspectionPlans.module\": [\n\t\t\"./src/app/inspectionPlans/inspectionPlans.module.ts\",\n\t\t\"inspectionPlans-inspectionPlans-module\"\n\t],\n\t\"./persons/persons.module\": [\n\t\t\"./src/app/persons/persons.module.ts\",\n\t\t\"persons-persons-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AngularMaterialModule } from './shared/angular-material.module'\r\n\r\nimport { CoreModule } from './core/core.module'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegistrationComponent },\r\n  { path: '', component: HomeComponent, pathMatch: 'full' },\r\n  { path: 'counter', component: CounterComponent },\r\n  { path: 'fetch-data', component: FetchDataComponent },\r\n  { path: 'my-route', component: CounterComponent },\r\n  { path: 'equipments', loadChildren: './equipments/equipments.module#EquipmentsModule' },\r\n  { path: 'persons', loadChildren: './persons/persons.module#PersonsModule' },\r\n  { path: 'inspectionPlans', loadChildren: './inspectionPlans/inspectionPlans.module#InspectionPlansModule' },\r\n  { path: 'calibrations', loadChildren: './calibration/calibrations.module#CalibrationsModule' },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n    LoginComponent,\r\n    RegistrationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(routes),\r\n    BrowserAnimationsModule,\r\n    AngularMaterialModule,\r\n    CoreModule,\r\n  ],\r\n  exports: [AngularMaterialModule, CoreModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AuthenticationGuard } from './guards/authentication.guard';\r\n\r\nimport { HttpRequestInterceptor } from './services/http-request-interceptor';\r\n\r\nimport { SecurityService } from './services/security.service';\r\nimport { TokenService } from './services/token.service';\r\nimport { ApplicationService } from './services/application.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n  ],\r\n  imports: [],\r\n  providers: [\r\n    AuthenticationGuard,\r\n    SecurityService,\r\n    TokenService,\r\n    ApplicationService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpRequestInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  exports: []\r\n})\r\n\r\nexport class CoreModule {\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthenticationGuard implements CanActivate {\r\n  constructor() { }\r\n\r\n  canActivate() {\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TokenService } from './token.service';\r\n\r\n@Injectable()\r\nexport class ApplicationService {\r\n\r\n  public baseUrl: string;\r\n\r\n  constructor(private tokenService: TokenService) {\r\n    this.baseUrl = document.getElementsByTagName('base')[0].href;\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return this.tokenService.getToken() != null;\r\n  }\r\n\r\n  userEmail() {\r\n    var token = this.tokenService.getToken();\r\n\r\n    if (token != null)\r\n      return token.email;\r\n\r\n    return \"\";\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpRequest, HttpErrorResponse, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { empty, Observable, throwError, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { TokenService } from './token.service';\r\nimport { Token } from './security.models';\r\n\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private tokenService: TokenService\r\n  ) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    var token: Token = this.tokenService.getToken();\r\n\r\n    request = token ? request.clone(\r\n      {\r\n        headers: request.headers.set(\"Authorization\", \"Bearer \" + token.value)\r\n      }\r\n    ) : request;\r\n\r\n    return next.handle(request).pipe(\r\n      catchError(\r\n        (error: HttpErrorResponse, caught: Observable<HttpEvent<HttpErrorResponse>>) => {\r\n\r\n          if (error.status === 401) {\r\n            this.router.navigate(['/login']);\r\n            return of<HttpEvent<HttpErrorResponse>>();\r\n          }\r\n\r\n          if (error.status === 403) {\r\n            this.router.navigate(['/forbidden']);\r\n            return of<HttpEvent<HttpErrorResponse>>();\r\n          }\r\n          return throwError(error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observer, Observable } from 'rxjs';\r\n\r\nimport { Token, RegisterModel, LoginModel } from './security.models';\r\nimport { TokenService } from './token.service';\r\nimport { ApplicationService } from './application.service';\r\n\r\n@Injectable()\r\nexport class SecurityService {\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private tokenService: TokenService,\r\n    private applicationService: ApplicationService) {\r\n  }\r\n\r\n  register(registerModel: RegisterModel) {\r\n    return new Observable<Token>((obs: Observer<Token>) => {\r\n      this.httpClient.post<Token>(`${this.applicationService.baseUrl}Account/Register`, registerModel).subscribe(token => {\r\n\r\n        this.tokenService.saveToken(token);\r\n\r\n        obs.next(token);\r\n        obs.complete();\r\n      });\r\n    });\r\n  }\r\n\r\n  login(loginModel: LoginModel) {\r\n    return new Observable<Token>((obs: Observer<Token>) => {\r\n      this.httpClient.post<Token>(`${this.applicationService.baseUrl}Account/Login`, loginModel).subscribe(token => {\r\n\r\n        this.tokenService.saveToken(token);\r\n\r\n        obs.next(token);\r\n        obs.complete();\r\n      });\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.tokenService.deleteToken();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Token } from './security.models';\r\n\r\n@Injectable()\r\nexport class TokenService {\r\n\r\n  constructor() { }\r\n\r\n  saveToken(token: Token) {\r\n    localStorage.setItem(\"token\", JSON.stringify(token));\r\n  }\r\n\r\n  getToken(): Token | null {\r\n    return this.validate(JSON.parse(localStorage.getItem(\"token\") as string));\r\n  }\r\n\r\n  validate(token: Token | null): Token | null {\r\n    if (token) {\r\n      if (new Date(token.expiry) > new Date())\r\n        return token;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  deleteToken() {\r\n    localStorage.removeItem(\"token\");\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n\r\n  public persons: Person[];\r\n  public inspectionPlans: InspectionPlan[];\r\n  public equipments: Equipment[];\r\n  public calibrations: Calibration[];\r\n\r\n  public name: string = \"test\";\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n    this.loadPersons();\r\n    this.loadInspectionPlans();\r\n    this.loadEquipments();\r\n    this.loadCalibrations();\r\n    }\r\n\r\n  loadPersons() {\r\n    this.http.get<Person[]>(this.baseUrl + 'api/People').subscribe(result => {\r\n      this.persons = result;\r\n      console.log(this.persons);\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  loadInspectionPlans() {\r\n    this.http.get<InspectionPlan[]>(this.baseUrl + 'api/InspectionPlans').subscribe(result => {\r\n      this.inspectionPlans = result;\r\n      console.log(this.inspectionPlans);\r\n    }, error => console.error(error));\r\n    };\r\n\r\n  loadEquipments() {\r\n    this.http.get<Equipment[]>(this.baseUrl + 'api/Equipments').subscribe(result => {\r\n      this.equipments = result;\r\n      console.log(this.equipments);\r\n    }, error => console.error(error));\r\n  }\r\n  loadCalibrations() {\r\n    this.http.get<Calibration[]>(this.baseUrl + 'api/Calibrations').subscribe(result => {\r\n      this.calibrations = result;\r\n      console.log(this.calibrations);\r\n    }, error => console.error(error));\r\n  }\r\n\r\n}\r\n\r\ninterface Person {\r\n  name: string;\r\n  surname: string;\r\n  phoneNumber: string;\r\n  email: string;\r\n}\r\n\r\ninterface InspectionPlan {\r\n  description: string;\r\n  temperature: Int16Array;\r\n  humidity: Int16Array;\r\n  pressure: Int16Array;\r\n  person: Person;\r\n}\r\ninterface Equipment {\r\n  description: string;\r\n  equipementType: string;\r\n  model: string;\r\n  serialNumber: string;\r\n  calibrationDate: Date;\r\n}\r\n\r\ninterface Calibration {\r\n  equipment: Equipment;\r\n  person: Person;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","export default \"body {\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SecurityService } from '../core/services/security.service';\r\nimport { LoginModel } from '../core/services/security.models';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public loginModel: LoginModel = <LoginModel>{};\r\n\r\n  constructor(private securityService: SecurityService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  loginUser() {\r\n    this.securityService.login(this.loginModel).subscribe(token => {\r\n      this.router.navigate(['/fetch-data']);\r\n    });\r\n  }\r\n}\r\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICBodG1sIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbn1cclxuXHJcbi5ib3gtc2hhZG93IHtcclxuICBib3gtc2hhZG93OiAwIC4yNXJlbSAuNzVyZW0gcmdiYSgwLCAwLCAwLCAuMDUpO1xyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","export default \"body {\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3RyYXRpb24vcmVnaXN0cmF0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5IHtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SecurityService } from '../core/services/security.service';\r\nimport { RegisterModel } from '../core/services/security.models';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  public registerModel: RegisterModel = <RegisterModel>{};\r\n\r\n  constructor(private securityService: SecurityService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  registerUser() {\r\n    this.securityService.register(this.registerModel).subscribe(token => {\r\n      this.router.navigate(['/fetch-data']);\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatSlideToggleModule,\r\n  MatSliderModule,\r\n  MatToolbarModule,\r\n  MatSidenavModule,\r\n  MatBadgeModule,\r\n  MatListModule,\r\n  MatTableModule,\r\n  MatGridListModule,\r\n\r\n  MatFormFieldModule,\r\n  MatSelectModule,\r\n  MatRadioModule,\r\n  MatChipsModule,\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatTooltipModule,\r\n\r\n  MatPaginatorModule,\r\n  MatProgressSpinnerModule,\r\n  MatProgressBarModule,\r\n  MatCardModule,\r\n\r\n  MatDatepickerModule,\r\n  MatNativeDateModule, }\r\n  from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatBadgeModule,\r\n    MatListModule,\r\n    MatTableModule,\r\n    MatGridListModule,\r\n\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatChipsModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatCardModule\r\n  ],\r\n  exports: [\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatBadgeModule,\r\n    MatListModule,\r\n    MatTableModule,\r\n    MatGridListModule,\r\n\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatChipsModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatCardModule\r\n   ]\r\n\r\n})\r\n\r\nexport class AngularMaterialModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}