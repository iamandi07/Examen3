{"version":3,"sources":["./src/app/app.component.html","./src/app/counter/counter.component.html","./src/app/fetch-data/fetch-data.component.html","./src/app/home/home.component.html","./src/app/login/login.component.html","./src/app/nav-menu/nav-menu.component.html","./src/app/registration/registration.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/guards/authentication.guard.ts","./src/app/core/services/application.service.ts","./src/app/core/services/http-request-interceptor.ts","./src/app/core/services/security.service.ts","./src/app/core/services/token.service.ts","./src/app/counter/counter.component.ts","./src/app/fetch-data/fetch-data.component.ts","./src/app/home/home.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/nav-menu/nav-menu.component.css","./src/app/nav-menu/nav-menu.component.ts","./src/app/registration/registration.component.css","./src/app/registration/registration.component.ts","./src/app/shared/angular-material.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export default \"<body>\\r\\n  <app-nav-menu></app-nav-menu>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\"","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\"","export default \"<h1 id=\\\"tableLabel\\\">Examen</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!persons\\\"><em>Loading...</em></p>\\r\\n<p *ngIf=\\\"!inspectionPlans\\\"><em>Loading...</em></p>\\r\\n<p *ngIf=\\\"!equipments\\\"><em>Loading...</em></p>\\r\\n<p *ngIf=\\\"!calibrations\\\"><em>Loading...</em></p>\\r\\n\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"persons\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Name</th>\\r\\n      <th>Surname</th>\\r\\n      <th>PhoneNumber</th>\\r\\n      <th>Email</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let person of persons\\\">\\r\\n      <td>{{ person.name }}</td>\\r\\n      <td>{{ person.surname }}</td>\\r\\n      <td>{{ person.phoneNumber }}</td>\\r\\n      <td>{{ person.email }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"inspectionPlans\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Description</th>\\r\\n      <th>Temperature</th>\\r\\n      <th>Humidity</th>\\r\\n      <th>Pressure</th>\\r\\n      <th>Person</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let inspectionPlan of inspectionPlans\\\">\\r\\n      <td>{{ inspectionPlan.description }}</td>\\r\\n      <td>{{ inspectionPlan.temperature }}</td>\\r\\n      <td>{{ inspectionPlan.humidity }}</td>\\r\\n      <td>{{ inspectionPlan.pressure }}</td>\\r\\n      <td>{{ inspectionPlan.person }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"equipments\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Description</th>\\r\\n      <th>EquipementType</th>\\r\\n      <th>Model</th>\\r\\n      <th>SerialNumber</th>\\r\\n      <th>CalibrationDate</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let equipment of equipments\\\">\\r\\n      <td>{{ equipment.description }}</td>\\r\\n      <td>{{ equipment.equipementType }}</td>\\r\\n      <td>{{ equipment.model }}</td>\\r\\n      <td>{{ equipment.serialNumber }}</td>\\r\\n      <td>{{ equipment.calibrationDate }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"calibrations\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Equipment</th>\\r\\n      <th>Person</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let calibration of calibrations\\\">\\r\\n      <td>{{ calibration.equipment }}</td>\\r\\n      <td>{{ calibration.person }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","export default \"<html>\\r\\n<head>\\r\\n<style>\\r\\n\\r\\nhtml, body {\\r\\n    /* The image used */\\r\\n    background-image: url(\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/full page/img(20).jpg\\\");\\r\\n    /* Full height */\\r\\n    height: 100%;\\r\\n    margin: 0;\\r\\n    \\r\\n    /* Center and scale the image nicely */\\r\\n    background-position: center;\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: cover;\\r\\n  }\\r\\np{\\r\\n  text-align : center;\\r\\n  color: deeppink\\r\\n}\\r\\n</style>\\r\\n</head>\\r\\n<body>\\r\\n<h1>Hello, world!</h1>\\r\\n<p class=\\\" py-5 text-center\\\">Welcome to the calibration page :)</p>\\r\\n<p> If you want to access the website, please Register. If it is done, Sign in</p>\\r\\n\\r\\n</body>\\r\\n</html>\\r\\n\"","export default \"<mat-card>\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Log in</mat-card-title>\\r\\n  </mat-card-header>\\r\\n\\r\\n  <form class=\\\"example-form\\\">\\r\\n    <mat-card-content>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"loginModel.email\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"loginModel.password\\\">\\r\\n      </mat-form-field>\\r\\n    </mat-card-content>\\r\\n    <button mat-stroked-button color=\\\"accent\\\" class=\\\"btn-block\\\" (click)=\\\"loginUser()\\\">Log in</button>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Examen</a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div\\r\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n      >\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li class=\\\"nav-item\\\"\\r\\n              [routerLinkActive]=\\\"['link-active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n          </li>\\r\\n          <!--          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n    <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/counter']\\\">Counter</a>\\r\\n  </li> -->\\r\\n\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-data']\\\">Fetch data</a>\\r\\n          </li>\\r\\n\\r\\n          <!-- <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n    <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/my-route']\\\">My route</a>\\r\\n  </li> -->\\r\\n\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/login']\\\">Sign In</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/employees']\\\">Employee</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/persons']\\\">Persons</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </nav>\\r\\n  </header>\\r\\n\"","export default \"<mat-card>\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Register</mat-card-title>\\r\\n  </mat-card-header>\\r\\n\\r\\n  <form class=\\\"example-form\\\">\\r\\n\\r\\n    <mat-card-content>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"registerModel.email\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"registerModel.password\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      </mat-card-content>\\r\\n\\r\\n    <button mat-stroked-button color=\\\"accent\\\" class=\\\"btn-block\\\" (click)=\\\"registerUser()\\\">Register</button>\\r\\n\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","var map = {\n\t\"./employees/employees.module\": [\n\t\t\"./src/app/employees/employees.module.ts\",\n\t\t\"employees-employees-module\"\n\t],\n\t\"./persons/persons.module\": [\n\t\t\"./src/app/persons/persons.module.ts\",\n\t\t\"persons-persons-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AngularMaterialModule } from './shared/angular-material.module'\r\n\r\nimport { CoreModule } from './core/core.module'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegistrationComponent },\r\n  { path: '', component: HomeComponent, pathMatch: 'full' },\r\n  { path: 'counter', component: CounterComponent },\r\n  { path: 'fetch-data', component: FetchDataComponent },\r\n  { path: 'my-route', component: CounterComponent },\r\n  { path: 'employees', loadChildren: './employees/employees.module#EmployeesModule' },\r\n  { path: 'persons', loadChildren: './persons/persons.module#PersonsModule' },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n    LoginComponent,\r\n    RegistrationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(routes),\r\n    BrowserAnimationsModule,\r\n    AngularMaterialModule,\r\n    CoreModule\r\n  ],\r\n  exports: [AngularMaterialModule, CoreModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AuthenticationGuard } from './guards/authentication.guard';\r\n\r\nimport { HttpRequestInterceptor } from './services/http-request-interceptor';\r\n\r\nimport { SecurityService } from './services/security.service';\r\nimport { TokenService } from './services/token.service';\r\nimport { ApplicationService } from './services/application.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n  ],\r\n  imports: [],\r\n  providers: [\r\n    AuthenticationGuard,\r\n    SecurityService,\r\n    TokenService,\r\n    ApplicationService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpRequestInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  exports: []\r\n})\r\n\r\nexport class CoreModule {\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthenticationGuard implements CanActivate {\r\n  constructor() { }\r\n\r\n  canActivate() {\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TokenService } from './token.service';\r\n\r\n@Injectable()\r\nexport class ApplicationService {\r\n\r\n  public baseUrl: string;\r\n\r\n  constructor(private tokenService: TokenService) {\r\n    this.baseUrl = document.getElementsByTagName('base')[0].href;\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return this.tokenService.getToken() != null;\r\n  }\r\n\r\n  userEmail() {\r\n    var token = this.tokenService.getToken();\r\n\r\n    if (token != null)\r\n      return token.email;\r\n\r\n    return \"\";\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpRequest, HttpErrorResponse, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { empty, Observable, throwError, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { TokenService } from './token.service';\r\nimport { Token } from './security.models';\r\n\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private tokenService: TokenService\r\n  ) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    var token: Token = this.tokenService.getToken();\r\n\r\n    request = token ? request.clone(\r\n      {\r\n        headers: request.headers.set(\"Authorization\", \"Bearer \" + token.value)\r\n      }\r\n    ) : request;\r\n\r\n    return next.handle(request).pipe(\r\n      catchError(\r\n        (error: HttpErrorResponse, caught: Observable<HttpEvent<HttpErrorResponse>>) => {\r\n\r\n          if (error.status === 401) {\r\n            this.router.navigate(['/login']);\r\n            return of<HttpEvent<HttpErrorResponse>>();\r\n          }\r\n\r\n          if (error.status === 403) {\r\n            this.router.navigate(['/forbidden']);\r\n            return of<HttpEvent<HttpErrorResponse>>();\r\n          }\r\n          return throwError(error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observer, Observable } from 'rxjs';\r\n\r\nimport { Token, RegisterModel, LoginModel } from './security.models';\r\nimport { TokenService } from './token.service';\r\nimport { ApplicationService } from './application.service';\r\n\r\n@Injectable()\r\nexport class SecurityService {\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private tokenService: TokenService,\r\n    private applicationService: ApplicationService) {\r\n  }\r\n\r\n  register(registerModel: RegisterModel) {\r\n    return new Observable<Token>((obs: Observer<Token>) => {\r\n      this.httpClient.post<Token>(`${this.applicationService.baseUrl}Account/Register`, registerModel).subscribe(token => {\r\n\r\n        this.tokenService.saveToken(token);\r\n\r\n        obs.next(token);\r\n        obs.complete();\r\n      });\r\n    });\r\n  }\r\n\r\n  login(loginModel: LoginModel) {\r\n    return new Observable<Token>((obs: Observer<Token>) => {\r\n      this.httpClient.post<Token>(`${this.applicationService.baseUrl}Account/Login`, loginModel).subscribe(token => {\r\n\r\n        this.tokenService.saveToken(token);\r\n\r\n        obs.next(token);\r\n        obs.complete();\r\n      });\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.tokenService.deleteToken();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Token } from './security.models';\r\n\r\n@Injectable()\r\nexport class TokenService {\r\n\r\n  constructor() { }\r\n\r\n  saveToken(token: Token) {\r\n    localStorage.setItem(\"token\", JSON.stringify(token));\r\n  }\r\n\r\n  getToken(): Token | null {\r\n    return this.validate(JSON.parse(localStorage.getItem(\"token\") as string));\r\n  }\r\n\r\n  validate(token: Token | null): Token | null {\r\n    if (token) {\r\n      if (new Date(token.expiry) > new Date())\r\n        return token;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  deleteToken() {\r\n    localStorage.removeItem(\"token\");\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n\r\n  public persons: Person[];\r\n  public inspectionPlans: InspectionPlan[];\r\n  public equipments: Equipment[];\r\n  public calibrations: Calibration[];\r\n\r\n  public name: string = \"test\";\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n    this.loadPersons();\r\n    this.loadInspectionPlans();\r\n    this.loadEquipments();\r\n    this.loadCalibrations();\r\n    }\r\n\r\n  loadPersons() {\r\n    this.http.get<Person[]>(this.baseUrl + 'api/People').subscribe(result => {\r\n      this.persons = result;\r\n      console.log(this.persons);\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  loadInspectionPlans() {\r\n    this.http.get<InspectionPlan[]>(this.baseUrl + 'api/InspectionPlans').subscribe(result => {\r\n      this.inspectionPlans = result;\r\n      console.log(this.inspectionPlans);\r\n    }, error => console.error(error));\r\n    };\r\n\r\n  loadEquipments() {\r\n    this.http.get<Equipment[]>(this.baseUrl + 'api/Equipments').subscribe(result => {\r\n      this.equipments = result;\r\n      console.log(this.equipments);\r\n    }, error => console.error(error));\r\n  }\r\n  loadCalibrations() {\r\n    this.http.get<Calibration[]>(this.baseUrl + 'api/Calibrations').subscribe(result => {\r\n      this.calibrations = result;\r\n      console.log(this.calibrations);\r\n    }, error => console.error(error));\r\n  }\r\n\r\n}\r\n\r\ninterface Person {\r\n  name: string;\r\n  surname: string;\r\n  phoneNumber: string;\r\n  email: string;\r\n}\r\n\r\ninterface InspectionPlan {\r\n  description: string;\r\n  temperature: Int16Array;\r\n  humidity: Int16Array;\r\n  pressure: Int16Array;\r\n  person: Person;\r\n}\r\ninterface Equipment {\r\n  description: string;\r\n  equipementType: string;\r\n  model: string;\r\n  serialNumber: string;\r\n  calibrationDate: Date;\r\n}\r\n\r\ninterface Calibration {\r\n  equipment: Equipment;\r\n  person: Person;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","export default \"body {\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SecurityService } from '../core/services/security.service';\r\nimport { LoginModel } from '../core/services/security.models';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public loginModel: LoginModel = <LoginModel>{};\r\n\r\n  constructor(private securityService: SecurityService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  loginUser() {\r\n    this.securityService.login(this.loginModel).subscribe(token => {\r\n      this.router.navigate(['/fetch-data']);\r\n    });\r\n  }\r\n}\r\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICBodG1sIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbn1cclxuXHJcbi5ib3gtc2hhZG93IHtcclxuICBib3gtc2hhZG93OiAwIC4yNXJlbSAuNzVyZW0gcmdiYSgwLCAwLCAwLCAuMDUpO1xyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","export default \"body {\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3RyYXRpb24vcmVnaXN0cmF0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5IHtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SecurityService } from '../core/services/security.service';\r\nimport { RegisterModel } from '../core/services/security.models';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  public registerModel: RegisterModel = <RegisterModel>{};\r\n\r\n  constructor(private securityService: SecurityService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  registerUser() {\r\n    this.securityService.register(this.registerModel).subscribe(token => {\r\n      this.router.navigate(['/fetch-data']);\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatSlideToggleModule,\r\n  MatSliderModule,\r\n  MatToolbarModule,\r\n  MatSidenavModule,\r\n  MatBadgeModule,\r\n  MatListModule,\r\n  MatTableModule,\r\n  MatGridListModule,\r\n\r\n  MatFormFieldModule,\r\n  MatSelectModule,\r\n  MatRadioModule,\r\n  MatChipsModule,\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatTooltipModule,\r\n\r\n  MatPaginatorModule,\r\n  MatProgressSpinnerModule,\r\n  MatProgressBarModule,\r\n  MatCardModule,\r\n\r\n  MatDatepickerModule,\r\n  MatNativeDateModule, }\r\n  from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatBadgeModule,\r\n    MatListModule,\r\n    MatTableModule,\r\n    MatGridListModule,\r\n\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatChipsModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatCardModule\r\n  ],\r\n  exports: [\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatBadgeModule,\r\n    MatListModule,\r\n    MatTableModule,\r\n    MatGridListModule,\r\n\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatChipsModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatCardModule\r\n   ]\r\n\r\n})\r\n\r\nexport class AngularMaterialModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///"}