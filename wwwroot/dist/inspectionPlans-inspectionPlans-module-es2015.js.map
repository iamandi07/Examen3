{"version":3,"sources":["./src/app/inspectionPlans/inspectionPlans-edit/inspectionPlans-edit.component.html","./src/app/inspectionPlans/inspectionPlans-list/inspectionPlans-list.component.html","./src/app/inspectionPlans/inspectionPlans.component.html","./src/app/Core/core.module.ts","./src/app/Core/guards/authentication.guard.ts","./src/app/Core/services/application.service.ts","./src/app/Core/services/http-request-interceptor.ts","./src/app/Core/services/security.service.ts","./src/app/Core/services/token.service.ts","./src/app/inspectionPlans/inspectionPlans-edit/inspectionPlans-edit.component.css","./src/app/inspectionPlans/inspectionPlans-edit/inspectionPlans-edit.component.ts","./src/app/inspectionPlans/inspectionPlans-list/inspectionPlans-list.component.css","./src/app/inspectionPlans/inspectionPlans-list/inspectionPlans-list.component.ts","./src/app/inspectionPlans/inspectionPlans-routing.module.ts","./src/app/inspectionPlans/inspectionPlans.component.css","./src/app/inspectionPlans/inspectionPlans.component.ts","./src/app/inspectionPlans/inspectionPlans.module.ts","./src/app/inspectionPlans/inspectionPlans.service.ts"],"names":[],"mappings":"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","file":"inspectionPlans-inspectionPlans-module-es2015.js","sourcesContent":["export default \"<p>Add/Edit inspectionPlan</p>\\r\\n\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n  <form *ngIf=\\\"formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n    <div class=\\\"example-container\\\">\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" type=\\\"text\\\">\\r\\n        <mat-error *ngIf=\\\"formGroup.get('description').touched && formGroup.get('description').errors && formGroup.get('description').errors.required\\\">\\r\\n          Name required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Temperature\\\" formControlName=\\\"temperature\\\" type=\\\"number\\\">\\r\\n        <mat-error *ngIf=\\\"formGroup.get('temperature').touched && formGroup.get('temperature').errors && formGroup.get('temperature').errors.required\\\">\\r\\n          Temperature\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Humidity\\\" formControlName=\\\"humidity\\\" type=\\\"number\\\">\\r\\n        <mat-error *ngIf=\\\"formGroup.get('humidity').touched && formGroup.get('humidity').errors && formGroup.get('humidity').errors.required\\\">\\r\\n          Humidity required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Pressure\\\" formControlName=\\\"pressure\\\" type=\\\"number\\\">\\r\\n        <mat-error *ngIf=\\\"formGroup.get('pressure').touched && formGroup.get('pressure').errors && formGroup.get('pressure').errors.required\\\">\\r\\n          Pressure required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"PersonId\\\" formControlName=\\\"personId\\\" type=\\\"number\\\">\\r\\n        <mat-error *ngIf=\\\"formGroup.get('personId').touched && formGroup.get('personId').errors && formGroup.get('personId').errors.required\\\">\\r\\n          Person required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"example-button-row\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\" [routerLink]='routerLink'>Cancel</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","export default \"<h1>Inspection Plans</h1>\\r\\n\\r\\n<p>Many Inspection Plans in the list</p>\\r\\n\\r\\n<div class=\\\"example-button-row\\\">\\r\\n  <button mat-raised-button [routerLink]='[\\\"../edit\\\"]' color=\\\"primary\\\">Add</button>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<mat-form-field>\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"description\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Description </th>\\r\\n      <td mat-cell *matCellDef=\\\"let inspection\\\"> {{inspection.description}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"temperature\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Temperature </th>\\r\\n      <td mat-cell *matCellDef=\\\"let inspection\\\"> {{inspection.temperature}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"humidity\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Humidity </th>\\r\\n      <td mat-cell *matCellDef=\\\"let inspection\\\"> {{inspection.humidity}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"pressure\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Pressure </th>\\r\\n      <td mat-cell *matCellDef=\\\"let inspection\\\"> {{inspection.pressure}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"personId\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> PersonId </th>\\r\\n      <td mat-cell *matCellDef=\\\"let inspection\\\"> {{inspection.personId}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:10%\\\"> Action </th>\\r\\n      <td mat-cell *matCellDef=\\\"let inspectionPlan\\\">\\r\\n        <button mat-icon-button matTooltip=\\\"Edit\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" [routerLink]=\\\"['../edit', inspectionPlan.id]\\\">edit</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button matTooltip=\\\"Delete\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon \\\" (click)=\\\"deleteInspectionPlan(inspectionPlan)\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container> -->\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n  <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!inspectionPlans\\\"></mat-progress-bar>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<router-outlet></router-outlet>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AuthenticationGuard } from './guards/authentication.guard';\r\n\r\nimport { HttpRequestInterceptor } from './services/http-request-interceptor';\r\n\r\nimport { SecurityService } from './services/security.service';\r\nimport { TokenService } from './services/token.service';\r\nimport { ApplicationService } from './services/application.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n  ],\r\n  imports: [],\r\n  providers: [\r\n    AuthenticationGuard,\r\n    SecurityService,\r\n    TokenService,\r\n    ApplicationService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpRequestInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  exports: []\r\n})\r\n\r\nexport class CoreModule {\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthenticationGuard implements CanActivate {\r\n  constructor() { }\r\n\r\n  canActivate() {\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TokenService } from './token.service';\r\n\r\n@Injectable()\r\nexport class ApplicationService {\r\n\r\n  public baseUrl: string;\r\n\r\n  constructor(private tokenService: TokenService) {\r\n    this.baseUrl = document.getElementsByTagName('base')[0].href;\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return this.tokenService.getToken() != null;\r\n  }\r\n\r\n  userEmail() {\r\n    var token = this.tokenService.getToken();\r\n\r\n    if (token != null)\r\n      return token.email;\r\n\r\n    return \"\";\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpRequest, HttpErrorResponse, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { empty, Observable, throwError, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { TokenService } from './token.service';\r\nimport { Token } from './security.models';\r\n\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private tokenService: TokenService\r\n  ) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    var token: Token = this.tokenService.getToken();\r\n\r\n    request = token ? request.clone(\r\n      {\r\n        headers: request.headers.set(\"Authorization\", \"Bearer \" + token.value)\r\n      }\r\n    ) : request;\r\n\r\n    return next.handle(request).pipe(\r\n      catchError(\r\n        (error: HttpErrorResponse, caught: Observable<HttpEvent<HttpErrorResponse>>) => {\r\n\r\n          if (error.status === 401) {\r\n            this.router.navigate(['/login']);\r\n            return of<HttpEvent<HttpErrorResponse>>();\r\n          }\r\n\r\n          if (error.status === 403) {\r\n            this.router.navigate(['/forbidden']);\r\n            return of<HttpEvent<HttpErrorResponse>>();\r\n          }\r\n          return throwError(error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observer, Observable } from 'rxjs';\r\n\r\nimport { Token, RegisterModel, LoginModel } from './security.models';\r\nimport { TokenService } from './token.service';\r\nimport { ApplicationService } from './application.service';\r\n\r\n@Injectable()\r\nexport class SecurityService {\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private tokenService: TokenService,\r\n    private applicationService: ApplicationService) {\r\n  }\r\n\r\n  register(registerModel: RegisterModel) {\r\n    return new Observable<Token>((obs: Observer<Token>) => {\r\n      this.httpClient.post<Token>(`${this.applicationService.baseUrl}Account/Register`, registerModel).subscribe(token => {\r\n\r\n        this.tokenService.saveToken(token);\r\n\r\n        obs.next(token);\r\n        obs.complete();\r\n      });\r\n    });\r\n  }\r\n\r\n  login(loginModel: LoginModel) {\r\n    return new Observable<Token>((obs: Observer<Token>) => {\r\n      this.httpClient.post<Token>(`${this.applicationService.baseUrl}Account/Login`, loginModel).subscribe(token => {\r\n\r\n        this.tokenService.saveToken(token);\r\n\r\n        obs.next(token);\r\n        obs.complete();\r\n      });\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.tokenService.deleteToken();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Token } from './security.models';\r\n\r\n@Injectable()\r\nexport class TokenService {\r\n\r\n  constructor() { }\r\n\r\n  saveToken(token: Token) {\r\n    localStorage.setItem(\"token\", JSON.stringify(token));\r\n  }\r\n\r\n  getToken(): Token | null {\r\n    return this.validate(JSON.parse(localStorage.getItem(\"token\") as string));\r\n  }\r\n\r\n  validate(token: Token | null): Token | null {\r\n    if (token) {\r\n      if (new Date(token.expiry) > new Date())\r\n        return token;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  deleteToken() {\r\n    localStorage.removeItem(\"token\");\r\n  }\r\n}\r\n","export default \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  padding: 5px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  body {\\r\\n  background-image: none;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW5zcGVjdGlvblBsYW5zL2luc3BlY3Rpb25QbGFucy1lZGl0L2luc3BlY3Rpb25QbGFucy1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0VBRUU7SUFDRSxXQUFXO0VBQ2I7O0VBRUY7RUFDRSxzQkFBc0I7QUFDeEIiLCJmaWxlIjoic3JjL2FwcC9pbnNwZWN0aW9uUGxhbnMvaW5zcGVjdGlvblBsYW5zLWVkaXQvaW5zcGVjdGlvblBsYW5zLWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBhZGRpbmc6IDVweDtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG4gIC5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuYm9keSB7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { InspectionPlansService } from '../inspectionPlans.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { InspectionPlan } from '../inspectionPlans.models';\r\n\r\n@Component({\r\n  selector: 'app-inspectionPlans-edit',\r\n  templateUrl: './inspectionPlans-edit.component.html',\r\n  styleUrls: ['./inspectionPlans-edit.component.css']\r\n})\r\nexport class InspectionPlansEditComponent implements OnInit {\r\n\r\n  private routerLink: string = '../list';\r\n\r\n  private inspectionPlanId: number;\r\n\r\n  private isEdit: boolean = false;\r\n\r\n  private formGroup: FormGroup;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private inspectionPlansService: InspectionPlansService,\r\n    private formBuilder: FormBuilder) {}\r\n  \r\n  ngOnInit() {\r\n    this.inspectionPlanId = parseInt(this.route.snapshot.params['id']);\r\n\r\n    if (this.inspectionPlanId) {\r\n      this.routerLink = '../../list';\r\n\r\n      this.inspectionPlansService.getInspectionPlan(this.inspectionPlanId).subscribe(res => {\r\n        this.initForm(res);\r\n        this.isEdit = true;\r\n      });\r\n    }\r\n\r\n    else {\r\n      this.initForm(<InspectionPlan>{});\r\n    }\r\n  }\r\n\r\n  save() {\r\n    Object.keys(this.formGroup.controls).forEach(control => {\r\n      this.formGroup.get(control).markAsTouched();\r\n    });\r\n\r\n    if (this.formGroup.valid) {\r\n      let inspectionPlan = this.formGroup.value as InspectionPlan;\r\n      inspectionPlan.description = inspectionPlan.description;\r\n      inspectionPlan.temperature = inspectionPlan.temperature;\r\n      inspectionPlan.humidity = inspectionPlan.humidity;\r\n      inspectionPlan.pressure = inspectionPlan.pressure;\r\n      inspectionPlan.personId = inspectionPlan.personId;\r\n\r\n      if (this.isEdit) {\r\n        inspectionPlan.id = this.inspectionPlanId;\r\n\r\n        this.inspectionPlansService.modifyInspectionPlan(inspectionPlan).subscribe(res => {\r\n          this.router.navigate(['/inspectionPlans']);\r\n        });\r\n      } else {\r\n\r\n        this.inspectionPlansService.saveInspectionPlan(inspectionPlan).subscribe(res => {\r\n          this.router.navigate(['/inspectionPlans']);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  initForm(inspectionPlan: InspectionPlan) {\r\n    this.formGroup = this.formBuilder.group({\r\n      description: [inspectionPlan.description, Validators.required],\r\n      temperature: [inspectionPlan.temperature, Validators.required],\r\n      humidity: [inspectionPlan.humidity, Validators.required],\r\n      pressure: [inspectionPlan.pressure, Validators.required],\r\n      personId: [inspectionPlan.personId, Validators.required],\r\n    });\r\n  }\r\n}\r\n","export default \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW5zcGVjdGlvblBsYW5zL2luc3BlY3Rpb25QbGFucy1saXN0L2luc3BlY3Rpb25QbGFucy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvaW5zcGVjdGlvblBsYW5zL2luc3BlY3Rpb25QbGFucy1saXN0L2luc3BlY3Rpb25QbGFucy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { InspectionPlan } from '../inspectionPlans.models';\r\nimport { InspectionPlansService } from '../inspectionPlans.service';\r\nimport { MatTableDataSource, MatPaginator } from '@angular/material';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-inspectionPlans-list',\r\n  templateUrl: './inspectionPlans-list.component.html',\r\n  styleUrls: ['./inspectionPlans-list.component.css']\r\n})\r\nexport class InspectionPlansListComponent implements OnInit {\r\n\r\n  public displayedColumns: string[] = ['description', 'temperature', 'humidity', 'pressure', 'personId', 'action' ];\r\n  public inspectionPlans: InspectionPlan[]\r\n\r\n  public dataSource;\r\n  public isloading = false;\r\n\r\n  constructor(private inspectionPlansService: InspectionPlansService) { }\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  ngOnInit() {\r\n      this.loadInspectionPlans();\r\n  }\r\n\r\n  async loadInspectionPlans() {\r\n    try {\r\n      this.inspectionPlansService.listInspectionPlans().subscribe(res => {\r\n        this.inspectionPlans = res;\r\n        this.dataSource = new MatTableDataSource(this.inspectionPlans);\r\n        this.isloading = true;\r\n        this.dataSource.paginator = this.paginator;\r\n      });\r\n    } catch (err) {\r\n      console.error('this is not good: ${err/Message}')\r\n      this.isloading = false;\r\n    }\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  deleteInspectionPlan(inspectionPlan: InspectionPlan) {\r\n      this.inspectionPlansService.deleteInspectionPlan(inspectionPlan.id).subscribe(x => {\r\n        this.loadInspectionPlans();\r\n    })\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InspectionPlansComponent } from './inspectionPlans.component';\nimport { InspectionPlansEditComponent } from './inspectionPlans-edit/inspectionPlans-edit.component';\nimport { InspectionPlansListComponent } from './inspectionPlans-list/inspectionPlans-list.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: InspectionPlansComponent,\n    children: [\n      { path: '', redirectTo: 'list', pathMatch: 'full' },\n      { path: 'list', component: InspectionPlansListComponent },\n      { path: 'edit/:id', component: InspectionPlansEditComponent },\n      { path: 'edit', component: InspectionPlansEditComponent },\n    ]\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class InspectionPlansRoutingModule {\n  static routedComponents = [InspectionPlansComponent, InspectionPlansListComponent, InspectionPlansEditComponent];\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luc3BlY3Rpb25QbGFucy9pbnNwZWN0aW9uUGxhbnMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inspectionPlans',\n  templateUrl: './inspectionPlans.component.html',\n  styleUrls: ['./inspectionPlans.component.css']\n})\nexport class InspectionPlansComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CoreModule } from '../Core/core.module';\r\nimport { AngularMaterialModule } from '../shared/angular-material.module';\r\n\r\nimport { InspectionPlansRoutingModule } from './inspectionPlans-routing.module';\r\nimport { InspectionPlansService } from './inspectionPlans.service';\r\n\r\n@NgModule({\r\n  declarations: [InspectionPlansRoutingModule.routedComponents],\r\n  imports: [\r\n      CommonModule,\r\n      InspectionPlansRoutingModule,\r\n      AngularMaterialModule,\r\n      CoreModule,\r\n      FormsModule,\r\n      ReactiveFormsModule\r\n  ],\r\n  providers: [InspectionPlansService]\r\n})\r\nexport class InspectionPlansModule { }\r\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { InspectionPlan } from \"./inspectionPlans.models\";\nimport { ApplicationService } from \"../core/services/application.service\";\n\n@Injectable()\nexport class InspectionPlansService {\n\n  constructor(\n    private http: HttpClient,\n    private applicationService: ApplicationService) { }\n\n  getInspectionPlan(id: number) {\n    return this.http.get<InspectionPlan>(`${this.applicationService.baseUrl}api/InspectionPlans/${id}`);\n  }\n\n  listInspectionPlans() {\n    return this.http.get<InspectionPlan[]>(`${this.applicationService.baseUrl}api/InspectionPlans`);\n  }\n\n  saveInspectionPlan(inspectionPlan: InspectionPlan) {\n    return this.http.post(`${this.applicationService.baseUrl}api/InspectionPlans`, inspectionPlan);\n  }\n\n  modifyInspectionPlan(inspectionPlan: InspectionPlan) {\n    return this.http.put(`${this.applicationService.baseUrl}api/InspectionPlans/${inspectionPlan.id}`, inspectionPlan);\n  }\n\n  deleteInspectionPlan(id: number) {\n    return this.http.delete<any>(`${this.applicationService.baseUrl}api/InspectionPlans/${id}`);\n  }\n}\n"],"sourceRoot":"webpack:///"}