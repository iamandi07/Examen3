{"version":3,"sources":["src/app/equipments/equipments-edit/equipments-edit.component.html","src/app/equipments/equipments-list/equipments-list.component.html","src/app/equipments/equipments.component.html","src/app/equipments/equipments-edit/equipments-edit.component.css","src/app/equipments/equipments-edit/equipments-edit.component.ts","src/app/equipments/equipments-list/equipments-list.component.css","src/app/equipments/equipments-list/equipments-list.component.ts","src/app/equipments/equipments-routing.module.ts","src/app/equipments/equipments.component.css","src/app/equipments/equipments.component.ts","src/app/equipments/equipments.module.ts","src/app/equipments/equipments.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<p>Add/Edit equipment</p>\\r\\n\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n  <form *ngIf=\\\"formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n    <div class=\\\"example-container\\\">\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('description').touched && formGroup.get('description').errors && formGroup.get('description').errors.required\\\">\\r\\n          Description required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"EquipementType\\\" formControlName=\\\"equipementType\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('equipementType').touched && formGroup.get('equipementType').errors && formGroup.get('equipementType').errors.required\\\">\\r\\n          Equipment Type required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Model\\\" formControlName=\\\"model\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('model').touched && formGroup.get('model').errors && formGroup.get('model').errors.required\\\">\\r\\n          Model required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"SerialNumber\\\" formControlName=\\\"serialNumber\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('serialNumber').touched && formGroup.get('serialNumber').errors && formGroup.get('serialNumber').errors.required\\\">\\r\\n          Serial Number required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"CalibrationDate\\\" formControlName=\\\"calibrationDate\\\" type=\\\"text\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"formGroup.get('calibrationDate').touched && formGroup.get('calibrationDate').errors && formGroup.get('calibrationDate').errors.required\\\">\\r\\n          Serial Number required!\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"example-button-row\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\" [routerLink]='routerLink'>Cancel</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","export default \"<h1>Equipments</h1>\\r\\n\\r\\n<p>Many equipments in the list</p>\\r\\n\\r\\n<div class=\\\"example-button-row\\\">\\r\\n  <button mat-raised-button [routerLink]='[\\\"../edit\\\"]' color=\\\"primary\\\">Add</button>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<mat-form-field>\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"description\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Description </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"equipementType\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> EquipmentType </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.equipementType}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"model\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Model </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.model}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"serialNumber\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Serial Number </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serialNumber}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"calibrationDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Calibration Date </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.calibrationDate}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Action </th>\\r\\n      <td mat-cell *matCellDef=\\\"let equipment\\\">\\r\\n        <button mat-icon-button matTooltip=\\\"Edit\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" [routerLink]=\\\"['../edit', equipment.id]\\\">edit</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button matTooltip=\\\"Delete\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon \\\" (click)=\\\"deleteEquipment(equipment)\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n  <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!equipments\\\"></mat-progress-bar>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<router-outlet></router-outlet>\\r\\n\"","export default \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  padding: 5px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  body {\\r\\n  background-image: none;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXF1aXBtZW50cy9lcXVpcG1lbnRzLWVkaXQvZXF1aXBtZW50cy1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0VBRUU7SUFDRSxXQUFXO0VBQ2I7O0VBRUY7RUFDRSxzQkFBc0I7QUFDeEIiLCJmaWxlIjoic3JjL2FwcC9lcXVpcG1lbnRzL2VxdWlwbWVudHMtZWRpdC9lcXVpcG1lbnRzLWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBhZGRpbmc6IDVweDtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG4gIC5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuYm9keSB7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { EquipmentsService } from '../equipments.service';\r\nimport { Equipment } from '../equipments.models';\r\n\r\n@Component({\r\n  selector: 'app-equipments-edit',\r\n  templateUrl: './equipments-edit.component.html',\r\n  styleUrls: ['./equipments-edit.component.css']\r\n})\r\nexport class EquipmentsEditComponent implements OnInit {\r\n\r\n  private routerLink: string = '../list';\r\n\r\n  private equipmentId: number;\r\n\r\n  private isEdit: boolean = false;\r\n\r\n  public formGroup: FormGroup;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private equipmentsService: EquipmentsService,\r\n    private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.equipmentId = parseInt(this.route.snapshot.params['id']);\r\n\r\n    if (this.equipmentId) {\r\n      this.routerLink = '../../list';\r\n\r\n      this.equipmentsService.getEquipment(this.equipmentId).subscribe(res => {\r\n        this.initForm(res);\r\n        this.isEdit = true;\r\n      });\r\n    }\r\n    else {\r\n      this.initForm(<Equipment>{});\r\n    }\r\n  }\r\n\r\n  save() {\r\n    Object.keys(this.formGroup.controls).forEach(control => {\r\n      this.formGroup.get(control).markAsTouched();\r\n    });\r\n\r\n    if (this.formGroup.valid) {\r\n      let equipment = this.formGroup.value as Equipment;\r\n      equipment.description = equipment.description;\r\n      equipment.equipementType = equipment.equipementType;\r\n      equipment.model = equipment.model;\r\n      equipment.serialNumber = equipment.serialNumber;\r\n      equipment.calibrationDate = equipment.calibrationDate;\r\n\r\n      if (this.isEdit) {\r\n        equipment.id = this.equipmentId;\r\n\r\n        this.equipmentsService.modifyEquipment(equipment).subscribe(res => {\r\n          this.router.navigate(['/equipments']);\r\n        });\r\n      } else {\r\n\r\n        this.equipmentsService.saveEquipment(equipment).subscribe(res => {\r\n          this.router.navigate(['/equipments']);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  initForm(equipment: Equipment) {\r\n    this.formGroup = this.formBuilder.group({\r\n      description: [equipment.description, Validators.required],\r\n      equipementType: [equipment.equipementType, Validators.required],\r\n      model: [equipment.model, Validators.required],\r\n      serialNumber: [equipment.serialNumber, Validators.required],\r\n      calibrationDate: [equipment.calibrationDate, Validators.required]\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXF1aXBtZW50cy9lcXVpcG1lbnRzLWxpc3QvZXF1aXBtZW50cy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvZXF1aXBtZW50cy9lcXVpcG1lbnRzLWxpc3QvZXF1aXBtZW50cy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Equipment } from '../equipments.models';\r\nimport { EquipmentsService } from '../equipments.service';\r\nimport { MatTableDataSource, MatPaginator } from '@angular/material';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-equipments-list',\r\n  templateUrl: './equipments-list.component.html',\r\n  styleUrls: ['./equipments-list.component.css']\r\n})\r\nexport class EquipmentsListComponent implements OnInit {\r\n\r\n  public displayedColumns: string[] = ['description', 'equipementType', 'model', 'serialNumber', 'calibrationDate', 'action'];\r\n  public equipments: Equipment[];\r\n\r\n  public dataSource;\r\n  public isloading = false;\r\n\r\n  constructor(private equipmentsService: EquipmentsService) { }\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  ngOnInit() {\r\n    this.loadEquipments();\r\n  }\r\n\r\n  async loadEquipments() {\r\n    try {\r\n      this.equipmentsService.listEquipments().subscribe(res => {\r\n        this.equipments = res;\r\n        this.dataSource = new MatTableDataSource(this.equipments);\r\n        this.isloading = true;\r\n        this.dataSource.paginator = this.paginator;\r\n      });\r\n    } catch (err) {\r\n      console.error(`this is not good: ${err.Message}`);\r\n      this.isloading = false;\r\n    }\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  deleteEquipment(equipment: Equipment) {\r\n    this.equipmentsService.deleteEquipment(equipment.id).subscribe(x => {\r\n      this.loadEquipments();\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EquipmentsComponent } from './equipments.component';\r\nimport { EquipmentsListComponent } from './equipments-list/equipments-list.component';\r\nimport { EquipmentsEditComponent } from './equipments-edit/equipments-edit.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: EquipmentsComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n      { path: 'list', component: EquipmentsListComponent },\r\n      { path: 'edit/:id', component: EquipmentsEditComponent },\r\n      { path: 'edit', component: EquipmentsEditComponent },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class EquipmentsRoutingModule {\r\n  static routedComponents = [EquipmentsComponent, EquipmentsListComponent, EquipmentsEditComponent];\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VxdWlwbWVudHMvZXF1aXBtZW50cy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-equipments',\r\n  templateUrl: './equipments.component.html',\r\n  styleUrls: ['./equipments.component.css']\r\n})\r\nexport class EquipmentsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CoreModule } from '../core/core.module';\r\nimport { AngularMaterialModule } from '../shared/angular-material.module';\r\n\r\nimport { EquipmentsRoutingModule } from './equipments-routing.module';\r\nimport { EquipmentsService } from './equipments.service';\r\n\r\n@NgModule({\r\n  declarations: [EquipmentsRoutingModule.routedComponents],\r\n  imports: [\r\n    CommonModule,\r\n    EquipmentsRoutingModule,\r\n    AngularMaterialModule,\r\n    CoreModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [EquipmentsService],\r\n})\r\nexport class EquipmentsModule { }\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { ApplicationService } from \"../core/services/application.service\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Equipment } from \"./equipments.models\";\r\n\r\n@Injectable()\r\nexport class EquipmentsService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private applicationService: ApplicationService) { }\r\n\r\n  getEquipment(id: number) {\r\n    return this.http.get<Equipment>(`${this.applicationService.baseUrl}api/Equipments/${id}`);\r\n  }\r\n\r\n  listEquipments() {\r\n    return this.http.get<Equipment[]>(`${this.applicationService.baseUrl}api/Equipments`);\r\n  }\r\n\r\n  saveEquipment(equipment: Equipment) {\r\n    return this.http.post(`${this.applicationService.baseUrl}api/Equipments`, equipment);\r\n  }\r\n\r\n  modifyEquipment(equipment: Equipment) {\r\n    return this.http.put(`${this.applicationService.baseUrl}api/Equipments/${equipment.id}`, equipment);\r\n  }\r\n\r\n  deleteEquipment(id: number) {\r\n    return this.http.delete<any>(`${this.applicationService.baseUrl}api/Equipments/${id}`);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"equipments-equipments-module-es5.js"}